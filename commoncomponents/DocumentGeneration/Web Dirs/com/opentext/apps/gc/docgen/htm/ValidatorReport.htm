<!DOCTYPE html>
<html lang="en">

<head>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <!--link rel="stylesheet" href="../../../../../cws/framework/libraries/bootstrap/css/bootstrap.min.css"></link-->
    <link rel="stylesheet" href="../css/docgencommon.css">
    </link>
    <link rel="stylesheet" href="../../../../../../thirdparty/bootstrap/css/bootstrap.css">
    <script src="../../../../../../thirdparty/jquery/jquery.js"></script>
    <script src="../../../../../../html5/cordys.html5sdk.js" type="text/javascript"></script>
    <script src="../../../../../../thirdparty/bootstrap/js/bootstrap.js"></script>
    <script src="../../../../../../thirdparty/knockout/knockout.js" type="text/javascript"></script>
	<script src="../../../../../../com/opentext/apps/utils/js/translationsUtil.js" type="text/javascript"></script>
    <script src="../js/docgencommon.js"></script>
    <script type="text/javascript">
        $.cordys.json.defaults.removeNamespacePrefix = true;
		var g_parentWindow = window.parent.parent;
        var l_ExceptionMsg = "An error occurred during verification of the document layout. Contact the administrator.";
        var INSTANCEID = "" + getUrlParameterValue("instanceId", null, true);
        INSTANCEID = INSTANCEID.substring(INSTANCEID.indexOf(".") + 1);
        var g_paraCharLength = 20;
        var ValidatorReportModel = function () {
            var self = this;
            self.Paragraphs = ko.observableArray([]);
        }
        var ParagraphModel = function () {
            var self = this;
            self.StartsWith = ko.observable();
            self.EndsWith = ko.observable();
            self.paraText = ko.observable();
            self.TokensList = ko.observableArray([]);
        }
        var l_validatorreport_model = new ValidatorReportModel();
        function loadValidatorReport() {
            ValidatorReportDataModel = $.cordys.ajax(
                {
                    namespace: "http://schemas.cordys.com/apps/documentgeneration/18.4",
                    method: "ValidateDocumentLayout",
                    parameters:
                    {
                        LayoutId: INSTANCEID
                    },
                    success: function (data) {
                        if (data.tuple.old.ValidateDocumentLayout.ValidateDocumentLayout && data.tuple.old.ValidateDocumentLayout.ValidateDocumentLayout.ValidatorResult) {
                            var newBtn = document.createElement("Button");
                            newBtn.innerHTML = "Correct tokens";
                            newBtn.className = "btn btn-primary correct-tokens btn-translate";
                            newBtn.onclick = correctorToolBtnActionEvent;
                            $('ai-dialog-footer .btn-primary', window.parent.parent.document).before(newBtn);

                            document.getElementById("defaultContainer").style.display = "none";
                            document.getElementById("reportContainer").style.display = "block";
                            addDataToValidatorReportView(data.tuple.old.ValidateDocumentLayout.ValidateDocumentLayout.ValidatorResult.Paragraph, l_validatorreport_model);
                            ko.applyBindings(l_validatorreport_model, document.getElementById("ValidatorReport"));
                        }
                        else {
                            document.getElementById("reportContainer").style.display = "none";
                            document.getElementById("defaultContainer").style.display = "block";

                            changeDocReviewStatus();
                        }
                    },
                    error: function (responseFailure) {
                        window.showOrHideInfo(true, responseFailure, "Error", 10000);
                        return false;
                    }
                });
        }

        function correctorToolBtnActionEvent() {
            $.cordys.ajax({
                method: "CorrectTokensAndLinkDocument",
                namespace: "http://schemas/OpenTextDocumentGeneration/18.4",
                parameters: {
                    LayoutId: INSTANCEID
                },
                success: function (responseSuccess) {
                    if (Boolean(responseSuccess.DeleteDocPreviewFileFormFSResponse.tuple.old.DeleteDocPreviewFileFormFS.DeleteDocPreviewFileFormFS)) {

                        //Reload document preview iframe
                        var validatorPreviewFrame = $('[src*=ValidatorPreview]', window.parent.document);
                        var validatorPreviewFrameSrc = validatorPreviewFrame.attr('src')+'&updatePreview=true';
                        validatorPreviewFrame.attr('src', validatorPreviewFrameSrc);

                        //Reload tokens result iframe
                        var validatorReportFrame = $('[src*=ValidatorReport]', window.parent.document);
                        var validatorReportFrameSrc = validatorReportFrame.attr('src');
                        validatorReportFrame.attr('src', validatorReportFrameSrc);
                    } else {
                        window.showOrHideInfo(true, responseSuccess, "Error", 10000);
                        return false;
                    }
                },
                error: function (responseFailure) {
                    window.showOrHideInfo(true, responseFailure, "Error", 10000);
                    return false;
                }
            });
        }

        function changeDocReviewStatus(_updatedStatus) {
			
			$(window).on("unload", function(e) {
				g_parentWindow.location.reload();
			});
			
            $.cordys.ajax({
                method: "UpdateDocLayout",
                namespace: "http://schemas/OpenTextDocumentGeneration/DocLayout/operations",
                parameters: '<ns0:DocLayout-id xmlns:ns0="http://schemas/OpenTextDocumentGeneration/DocLayout"><ns0:Id>'+INSTANCEID+'</ns0:Id></ns0:DocLayout-id><ns0:DocLayout-update xmlns:ns0="http://schemas/OpenTextDocumentGeneration/DocLayout">    <ns0:Status>Active</ns0:Status></ns0:DocLayout-update>',
                success: function (responseSuccess) {
                    //Hide corrector action						
                    $('.correct-tokens', window.parent.parent.document).hide();
                },
                error: function (responseFailure) {
                    window.showOrHideInfo(true, responseFailure, "Error", 10000);
                    return false;
                }
            });
        }

        function getParaText(iElement) {
			var lText = "";
			lText+= iElement.StartsWith?iElement.StartsWith:"   ";			
            if (iElement.ContentLength > (2 * g_paraCharLength)) {
                lText+= iElement.EndsWith?("... - ..." + iElement.EndsWith):iElement.EndsWith;
            }
            else if (iElement.ContentLength > g_paraCharLength) {
                lText+= iElement.EndsWith?("... - ..." + iElement.EndsWith):iElement.EndsWith;
            }            
            return lText;
        }
        function addDataToValidatorReportView(iElementList, iModel) {
            iModel.Paragraphs.removeAll();
            if (iElementList) {
                if (iElementList.length) {
                    iElementList.forEach(function (iElement) {
                        var l_paraModel = new ParagraphModel();
                        l_paraModel.StartsWith(iElement.StartsWith);
                        l_paraModel.EndsWith(iElement.EndsWith);
                        l_paraModel.paraText(getParaText(iElement));
                        //iModel.TokensList.push(getTokensObject(iElement,iModel));
                        addDataToTokensView(iElement.MissingToken, l_paraModel);
                        iModel.Paragraphs.push(l_paraModel);
                    });
                }
                else {
                    var l_paraModel = new ParagraphModel();
                    l_paraModel.StartsWith(iElementList.StartsWith);
                    l_paraModel.EndsWith(iElementList.StartsWith);
                    l_paraModel.paraText(getParaText(iElementList));
                    //iModel.TokensList.push(getTokensObject(iElement,iModel));
                    addDataToTokensView(iElementList.MissingToken, l_paraModel);
                    iModel.Paragraphs.push(l_paraModel);
                }
            }
        }
        function getTokensObject(iTokens, iModel) {
            var l_tokens = [];
            if (iTokens.Token) {
                if (iTokens.Token.length) {
                    iTokens.Token.forEach(function (iToken) {
                        var l_tokenObject = { "tokenName": iToken.TokenText, "tokenPosition": iToken.Position };
                        l_tokens.push(l_tokenObject);
                    });
                }
                else {
                    var l_tokenObject = { "tokenName": iToken.TokenText, "tokenPosition": iToken.Position };
                    l_tokens.push(l_tokenObject);
                }
            }
            l_object.tokens = l_tokens;
            return l_object;
        }
        function addDataToTokensView(iElementList, iModel) {
            iModel.TokensList.removeAll();
            if (iElementList) {
                if (iElementList.length) {
                    iElementList.forEach(function (iElement) {
                        iModel.TokensList.push(iElement);
                    });
                }
                else {
                    iModel.TokensList.push(iElementList);
                }
            }
        }
        $(function () {
			var i_locale = getlocale();
			var rtl_css = '../../../../../../com/opentext/apps/utils/css/rtlappscommon.css';
			translateLabels("com/opentext/apps/commoncomponents/DocumentGeneration/DocumentGeneration", i_locale, true);
			loadRTLIfRequired(i_locale,rtl_css);
			
            document.getElementById("defaultContainer").style.display = "none";
            document.getElementById("reportContainer").style.display = "none";

            //$('ai-dialog-footer .btn-primary:contains("OK")', window.parent.parent.document).hide();
            //$('ai-dialog-footer .btn-primary[type="submit"][aria-label != ""]', window.parent.parent.document).hide();
			$("ai-dialog-footer bs-button:not(.aurelia-hide)[css-class='btn btn-primary']",
                window.parent.parent.document)[0].childNodes[0].setAttribute("style", "display:none");

            var cancelEle = $("ai-dialog-footer bs-button:not(.aurelia-hide)[css-class='btn btn-secondary']", window.parent.parent.document)[0].childNodes[0];
            
            cancelEle.innerHTML = "Close";
            cancelEle.className+=" btn-translate";


            //$('ai-dialog-footer .btn-secondary:contains("Cancel")', window.parent.parent.document).text("Close");
			
            window.loadValidatorReport();
        });

        function translatePlaceHolders(){
            var elems = window.parent.parent.document.getElementsByClassName("btn-translate");
            if(elems)
                for(var ind = 0; ind < elems.length; ind++){
                    elems[ind].innerHTML = getTranslationMessage(elems[ind].innerHTML);
                }
        }

        function showOrHideInfo(iShow, iResponse, iType, iVisibleTime) {

            var l_infoArea = document.getElementById("InfoArea");

            if (iShow) {
                var fault = iResponse.responseJSON;
                var iMessage = null;
                var _FaultCode = null;

                if (fault != undefined) {
                    _FaultCode = fault.faultcode.hasOwnProperty('text') ? fault.faultcode.text : fault.faultcode;
                    iMessage = _FaultCode.includes('DocGen') ? getTranslationMessage(fault.faultstring.text) : getTranslationMessage(l_ExceptionMsg);
                } else {
                    iMessage = getTranslationMessage(l_ExceptionMsg);
                }
                l_infoArea.style.display = "inline";
                l_infoArea.lastElementChild.innerText = iMessage;
                if (iVisibleTime) {
                    setTimeout(showOrHideInfo, iVisibleTime);
                }
            }
            else {
                l_infoArea.style.display = "none";
                l_infoArea.lastElementChild.innerText = "";
            }
        }
    </script>
</head>

<body class="cc-ltr">
	<span style="display: none;text-align: center;padding: 5px;border-bottom: 3px solid rgb(223, 51, 36);position: absolute;top: 5px;left: 5%;width: 90%;box-shadow: 0px 0px 5px 4px rgba(0,0,0,0.09);" id="InfoArea">
		<img src="../img/notification_error.svg" width="25px" height="25px" align="middle" style="margin-right:5px;">
		<span id="InfoText" style="position: relative;"></span>
	</span>
    <div id="defaultContainer">
        <p class="defaultInfo" data-translatable="true">All the tokens are replaced and the document layout has been verified.</p>
    </div>
    <div id="reportContainer" class="Container">
        <p class="tokensDefaultText"><text data-translatable="true"> The following tokens are not replaced.</text></p>
        <table class="table table-bordered" id="ValidatorReport" style="margin-top: 20px;">
            <thead>
                <tr>
                    <th data-translatable="true">Tokens by paragraphs</th>
                </tr>
            </thead>
            <tbody data-bind="foreach:Paragraphs">
                <tr>
                    <td><span data-bind="text:paraText"></span>
                        <table class="table table-striped table-bordered" style="margin-bottom: 0px; margin-top: 5px;">
                            <thead>
                                <tr>
                                    <th style="width: 80%;" data-translatable="true">Token</th>
                                    <th style="width: 20%;" data-translatable="true">Position</th>
                                </tr>
                            </thead>
                            <tbody data-bind="foreach:TokensList">
                                <tr>
                                    <td data-bind="text:$data.TokenText"></td>
                                    <td data-bind="text:$data.Position"></td>
                                </tr>
                            </tbody>
                        </table>
                    </td>
                </tr>
            </tbody>
        </table>
    </div>
</body>

</html>