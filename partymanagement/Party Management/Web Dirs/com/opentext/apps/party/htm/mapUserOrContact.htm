<!DOCTYPE html>
<html>

<head>
    <title>Map user or contact</title>
    <meta charset="utf-8">
    <meta name="viewport" content="width=device-width, initial-scale=1">
    <link rel="stylesheet" href="../css/appscommon.css">
    <link rel="stylesheet" href="../../../../../thirdparty/bootstrap/css/bootstrap.min.css">
    <script src="../../../../../thirdparty/jquery/jquery.js" type="text/javascript"></script>
    <script src="../../../../../html5/cordys.html5sdk.js" type="text/javascript"></script>
	<script src="../../../../../html5/thirdparty/moment.js" type="text/javascript"></script>
    <script src="../../../../../thirdparty/knockout/knockout.js" type="text/javascript"></script>
    <script src="../../../../../thirdparty/bootstrap/js/bootstrap.min.js" type="text/javascript"></script>
    <script src="../../../../../com/opentext/apps/utils/js/translationsUtil.js" type="text/javascript"></script>
    <script src="../js/appscommon.js" type="text/javascript"></script>
	<script type="text/javascript">
        $.cordys.json.defaults.removeNamespacePrefix = true;
        var l_partyID = "";
        var l_addToPartyBtnName = "Map onto party";
		var l_okBtn = "";

        var ButtonLabels = [l_addToPartyBtnName];

        var UsersListModel = function () {
            var self = this;
            self.UsersList = ko.observableArray([]);
            self.selectedUserID = ko.observable('');
            self.UserRowClicked = function (iItem, event) {
                $(event.currentTarget.parentElement).find('.cc-select-column').removeClass("cc-radio-on");
                $(event.currentTarget).find('.cc-select-column').addClass("cc-radio-on");
                if (iItem["Person-id"]) {
                    var l_Id = iItem["Person-id"].Id;
                    self.selectedUserID(l_Id);
					//$('ai-dialog-footer .btn-primary:contains('+l_addToPartyBtnName+')', window.parent.parent.document).attr("disabled", false);
                    $('ai-dialog-footer .btn-primary[id="map_onto_party"]', window.parent.parent.document).attr("disabled", false);
                    
                }
            }
            self.UserRowRadiobuttonClicked = function (iItem, event) {
                $(event.currentTarget.parentElement.parentElement.parentElement).find('.cc-select-column').removeClass("cc-radio-on");
                $(event.currentTarget).find('.cc-select-column').addClass("cc-radio-on");
                if (iItem["Person-id"]) {
                    var l_Id = iItem["Person-id"].Id;
                    self.selectedUserID(l_Id);
                    $('ai-dialog-footer .btn-primary[id="map_onto_party"]', window.parent.parent.document).attr("disabled", false);
                    //$('ai-dialog-footer .btn-primary:contains('+l_addToPartyBtnName+')', window.parent.parent.document).attr("disabled", false);
                }
                event.stopPropagation();
                return true;
            }
        }
        $(function () {
            var i_locale = getlocale();
            translateLabels("com/opentext/apps/accountmanagement/PartyManagement/PartyManagement", i_locale, true);
            var rtl_css = '../../../../../com/opentext/apps/utils/css/rtlappscommon.css';
            loadRTLIfRequired(i_locale,rtl_css);

			l_partyID = getUrlParameterValue("instanceId", null, true);
            //Platform dialog enhancements
            platformDialogModifications(l_addToPartyBtnName, MapUserOrContactToParty);
            //$('ai-dialog-footer .btn-primary:contains('+l_addToPartyBtnName+')', window.parent.parent.document).attr("disabled", true);
            $('ai-dialog-footer .btn-primary[id="map_onto_party"]', window.parent.parent.document).attr("disabled", true);


            l_usersList_model = new UsersListModel();
            ko.applyBindings(l_usersList_model, document.getElementById("div_usersList"));

            ListUsesAndContacts();
        });

        function translatePlaceHolders(){
                var elems = window.parent.parent.document.getElementsByClassName("btn-translate");
                if(elems)
                    for(var ind = 0; ind < elems.length; ind++){
                        elems[ind].innerHTML = getTranslationMessage(elems[ind].innerHTML);
                    }
        }

        function platformDialogModifications(i_newButtonName, i_newButtonAction) {
            $('ai-dialog', window.parent.parent.document).animate({
                'max-height': '80vh',
                'max-width': '60vw',
                'width': '60vw',
                'height': '80vh'
            }, 500);

            //Dialog content style enhancements				
            $('ai-dialog-body iframe', window.parent.parent.document).css({
                'width': '100%',
                'height': 'calc(100% - 6px)'
            });

            $('ai-dialog-body', window.parent.parent.document).css({
                'max-height': 'calc(80vh - 103px)',
                'height': '75vh',
            });

            $('.layout-panel .panel-container', window.parent.document).css({
                'padding-left': '0px'
            });

            $('panel-container iframe', window.parent.document).css({
                'height': 'calc(100% - 6px)',
                'width': '100%',
                'border': '0px'
            });
			// l_okBtn = $('ai-dialog-footer .btn-primary:contains("OK")', window.parent.parent.document);
            l_okBtn = $('ai-dialog-footer .btn-primary[type="submit"]', window.parent.parent.document);

            //hide OK button
            l_okBtn.hide();
            //Save changes action in footer
            var newBtn = document.createElement("Button");
            newBtn.innerHTML = i_newButtonName;
            newBtn.className = "btn btn-primary btn-translate";
            newBtn.onclick = i_newButtonAction;
            newBtn.id = "map_onto_party";

            $('ai-dialog-footer .btn-primary', window.parent.parent.document).before(newBtn);
        }
        function ListUsesAndContacts() {
            var l_firstNameFilter = document.getElementById("input_userListSearchFilter");
            $.cordys.ajax({
                namespace: "http://schemas.opentext.com/apps/contractcenterimport/16.3",
                method: "GetPersonDetailsbyEmailId",
                parameters: {
                    "firstName": l_firstNameFilter.value,
                    "Is_Internal": "true",
                    "offset": "0",
                    "limit": "200"
                },
                success: function (data) {
					if(data.PersonDetails.FindPersonListInternalResponse.Person && data.PersonDetails.FindPersonListInternalResponse.Person.length >200)
					{
						$('#div_countMessage').css('display', 'block');
					}
                    addDataToUsersAndContactsView(data.PersonDetails.FindPersonListInternalResponse.Person, l_usersList_model);
                },
                error: function (responseFailure) {
                    showOrHideErrorInfo("div_modalErrorInfoArea", true, getTranslationMessage("Unable to load contacts. Contact your administrator."), 10000);
                    return false;
                }
            });
        }
        function addDataToUsersAndContactsView(iElementList, iModel) {
            iModel.UsersList.removeAll();
            if (iElementList) {
                if (iElementList.length) {
                    iElementList.forEach(function (iElement) {
                        iModel.UsersList.push(iElement);
                    });
                }
                else {
                    iModel.UsersList.push(iElementList);
                }
            }
			PreselectAlreadyMappedContacts();
        }
		function PreselectAlreadyMappedContacts() {
			
		}
        function MapUserOrContactToParty() {
            $.cordys.ajax({
                namespace: "http://schemas/OpenTextPartyManagement/Party/operations",
                method: "CreateRelatedContacts",
                parameters: {
					"Party-id": { "Id": l_partyID },
					"RelatedContacts-create": {"ContainingPerson" : {
						"Person-id": { "Id": l_usersList_model.selectedUserID() }
						}}
                },
                success: function (data) {
                    $('#div_usersList').css('display', 'none');
                    $('#div_mappingSuccessMessg').css('display', 'block');
                    $('ai-dialog-footer .btn-primary[id="map_onto_party"]', window.parent.parent.document).hide();
					$('ai-dialog-footer .btn:contains("Cancel")', window.parent.parent.document).hide();
					l_okBtn.show();
					l_okBtn.removeClass("btn-primary");
					l_okBtn.addClass("btn-secondary");
					l_okBtn.text(getTranslationMessage("Close"));                
                },
                error: function (responseFailure) {
                    showOrHideErrorInfo("div_formErrorInfoArea", true, getTranslationMessage("Unable to map the contact onto the party. Contact your administrator."), 10000);
                    return false;
                }
            });
        }
    </script>
</head>

<body class="cc-ltr">
    <div id="div_mappingSuccessMessg" class="col-xs-12 cc-info-message" style="display: none;padding-top: 10% !important;">
	<img src="../img/notification_success.svg" style="width: 18px; height: 18px;" />
        <span data-translatable="true" style="font-size: 18px !important;">The external contact has been mapped onto the party. To view the mapped contact, click <b >Close</b>, and then click <b>Refresh</b> on your web browser.</span>
    </div>
    <div class="cc-error-info-area" id="div_formErrorInfoArea">
        <img src="../img/notification_error.svg"
            style="width: 11px; height: 11px;" />
        <span id="span_errorInfoMessage" style="position: relative;"></span>
    </div>
    <div id="div_usersList" class="col-md-12 cc-list" style="padding-top: 15px;">
        <div class="input-group" style="margin-bottom: 10px;">
            <input type="text" class="form-control cc-input-browse rtl-input-browse" id="input_userListSearchFilter" data-translatable="true" placeholder="Search by First name">
            <span class="input-group-addon cc-input-browse-icon rtl-input-browse-icon" style="cursor: pointer;">
                <img class="cc-input-icon" alt="Search"
                    src="../img/search.svg" onclick="ListUsesAndContacts()">
            </span>
        </div>
		<div id="div_countMessage" class="col-lg-12" style="overflow: auto;padding: 0px 0px 10px;display: none;">
		<img src="../img/notification_information.svg" style="float:left; width: 18px; height: 18px;" />
			<div class="display-Message" data-translatable="true" style="padding-left:22px">Displaying first 200 contacts. Search for more results.</div>
		</div>
        <table class="table cc-border" id="">
            <thead>
                <tr>
                    <th style="width: 10%;"></th>
                    <th style="width: 30%;" data-translatable="true" scope="col">First name</th>
					<th style="width: 30%;" data-translatable="true" scope="col">Last name</th>
                    <th style="width: 30%;" data-translatable="true" scope="col">Email ID</th>
                </tr>
            </thead>
            <tbody data-bind="foreach:UsersList">
                <tr data-bind="click:$root.UserRowClicked">
                    <td>
                        <div class="cc-select-column cc-radio-off"
                            data-bind="event:{click:$root.UserRowRadiobuttonClicked}"></div>
                    </td>
                    <td data-bind="text:getTextValue(FirstName)"></td>
					<td data-bind="text:getTextValue(LastName)"></td>
                    <td data-bind="text:getTextValue(Email)"></td>
                </tr>
            </tbody>
        </table>
    </div>
</body>

</html>